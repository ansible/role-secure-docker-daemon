---
# main.yml

- name: Create a tempdir
  file:
    state: directory
    path: "{{ dds_temp_path }}"   

- name: Remove passphrase file, if it exists
  file:
    state: absent
    path: "{{ dds_passphrase_file }}" 

- name: Create passphrase file
  file:
    state: touch
    path: "{{ dds_passphrase_file }}" 

- name: Add passphrase to the file
  lineinfile:
    dest: "{{ dds_passphrase_file }}"
    line: "{{ dds_passphrase }}" 

- name: Generate ca-key.pem
  command: "openssl genrsa -aes256 -passout file:{{ dds_passphrase_file }} -out {{ dds_temp_path }}/ca-key.pem 4096"

- name: Set ca-key.pem permissions
  file:
    path: "{{ dds_temp_path }}/{{ item }}"
    mode: 0400
  with_items:
    - ca-key.pem

- name: Generate ca certificate   
  command: "openssl req -new -x509 -days 365 -key {{ dds_temp_path }}/ca-key.pem -sha256 -out {{ dds_temp_path }}/ca.pem -passin file:{{ dds_passphrase_file }} -subj '/C={{ dds_country }}/ST={{dds_state }}>/L={{ dds_locality }}/O={{ dds_organization }}/CN={{ dds_common_name }}'"

- name: Set CA certificate permissions
  file:
    path: "{{ dds_temp_path }}/{{ item }}"
    mode: 0444
  with_items:
    - ca.pem

- include: generate_server_certs.yml
- include: generate_client_certs.yml

- name: Remove the temp directory
  file:
    state: absent
    path: "{{ dds_temp_path }}"

- name: Install shell script for setting DOCKER env vars
  template:
    src: "{{ role_path }}/templates/docker_env.j2"
    dest: "{{ dds_env_shell_path }}/docker_env.sh"
    mode: 0755
  when: dds_install_shell

- name: Restart the docker daemon 
  service:
    name: docker
    state: restarted  
  when: dds_restart_docker
