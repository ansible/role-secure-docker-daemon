---
# main.yml
- name: Check that the cert directories exists
  file:
    state: directory
    path: "{{ item }}"
  with_items:
  - "{{ dds_client_cert_path }}"
  - "{{ dds_server_cert_path }}"

- name: Generate ca-key.pem
  command: "openssl genrsa -aes256 -passout env:PASSKEY -out {{ dds_client_cert_path }}/ca-key.pem 4096"
  environment:
    PASSKEY: "{{ dds_passphrase }}"

- name: Generate ca certificate contents
  command: "openssl req -new -x509 -days 365 -key {{ dds_client_cert_path }}/ca-key.pem -sha256  -passin env:PASSKEY -subj '/C={{ dds_country }}/ST={{ dds_state }}>/L={{ dds_locality }}/O={{ dds_organization }}/CN={{ dds_common_name }}'"
  register: dds_ca_pem
  environment:
    PASSKEY: "{{ dds_passphrase }}"
  no_log: True

- include: generate_client_certs.yml
- include: generate_server_certs.yml
  become: true

- name: Install shell script for setting DOCKER env vars
  template:
    src: "{{ role_path }}/templates/docker_env.j2"
    dest: "{{ dds_env_shell_path }}/docker_env.sh"
    mode: 0755
  when: dds_install_shell

- name: Restart the docker daemon
  service:
    name: docker
    state: restarted
  become: true
  when: dds_restart_docker
